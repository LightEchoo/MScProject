path:
  global_path: "/home/alex4060/PythonProject/MScProject/MScProject"  # Project root directory

base:
  N: 10  # Number of nodes
  T: 11000  # Total number of time steps
  T_train_val: 10000  # Number of time steps for training and validation
  train_ratio: 0.8  # Proportion of the training set
  T_train: 8000 # Number of time steps for training
  T_val: 2000  # Number of time steps for validation
  T_test: 1000  # Number of time steps for testing
  lambda_load: 0.5  # Weight of load and latency, 0.5 means the weight of load
  top_k: [1, 2, 3, 4, 5]  # Values of top-k

data_generation:
  load_data:
    node_load_mean_mean: 50.0  # Mean of the initial load/mean of nodes
    node_load_mean_std: 10.0  # Standard deviation of the initial load/mean of nodes
    node_load_iid_std: 5.0  # Standard deviation of the load using iid method
    node_load_ar1_theta: 0.9  # Autocorrelation coefficient for load using AR1 method
    node_load_ar1_std: 80.0  # Standard deviation of the load using AR1 method

  latency_data:
    node_latency_mean_mean: 30.0  # Mean of the initial latency/mean of nodes
    node_latency_mean_std: 10.0  # Standard deviation of the initial latency/mean of nodes
    node_latency_ar1_theta: 0.9  # Autocorrelation coefficient for latency using AR1 method

  reward_parameters:
    iid:
      alpha_load_0: 30.0
      alpha_latency_1: 0.035

    ar1:
      alpha_load_0: 30.0
      alpha_latency_1: 0.086

  reward_parameters_slider:
    alpha_load_0:
      value: 1.0
      min: 0.001
      max: 40.0
      step: 0.01
      description: 'alpha_load_0'
    alpha_latency_0:
      value: 1.0
      min: 0.001
      max: 6.0
      step: 0.01
      description: 'alpha_latency_0'
    alpha_latency_1:
      value: 0.5
      min: 0.0001
      max: 0.5
      step: 0.001
      description: 'alpha_latency_1'

epsilon_greedy:
  #  epsilons : [0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 0.8, 0.9]  # Values of epsilon, not used in dynamic plot
  dynamic_plot:
    epsilon_min: 0.001 # Minimum value of epsilon
    epsilon_max: 0.5 # Maximum value of epsilon
    epsilon_step: 0.01 # Step size for epsilon
    epsilon_default_value: 0.1 # Default value of epsilon

  evaluation:
    epsilon_min: 0.0001 # Minimum value of epsilon
    epsilon_max: 0.2001 # Maximum value of epsilon
    epsilon_step: 0.0005 # Step size for epsilon

adaptive_epsilon_greedy:
  #  init_epsilons : [0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 0.8, 0.9]  # Values of epsilon, not used in dynamic plot
  #  min_epsilon: 0.05 # Minimum value of epsilon, not used in dynamic plot
  dynamic_plot:
    init_epsilon_min: 0.001 # Minimum value of epsilon
    init_epsilon_max: 0.5 # Maximum value of epsilon
    init_epsilon_step: 0.01 # Step size for epsilon
    init_epsilon_default_value: 0.1 # Default value of epsilon

    min_epsilon_min: 0.001 # Minimum value of the range for the minimum epsilon in the algorithm
    min_epsilon_max: 0.1 # Maximum value of the range for the minimum epsilon in the algorithm
    min_epsilon_step: 0.001 # Step size for the minimum epsilon in the algorithm
    min_epsilon_default_value: 0.05 # Default value of the minimum epsilon in the algorithm

  evaluation:
    init_epsilon_min: 0.05 # Minimum value of epsilon
    init_epsilon_max: 0.1001 # Maximum value of epsilon
    init_epsilon_step: 0.0005 # Step size for epsilon
    min_epsilon: 0.05 # Minimum value of epsilon in the algorithm

dynamic_adaptive_epsilon_greedy:
  #  init_epsilons : [0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 0.8, 0.9]  # Values of epsilon
  min_epsilon: 0.05 # Minimum value of epsilon
  max_epsilon: 0.8 # Maximum value of epsilon
  #  threshold: 0.25 # Threshold for changing epsilon
  #  percentiles: 80 # Percentile of previous single-step regret used for threshold selection, not used in dynamic plot
  dynamic_plot:
    init_epsilon_min: 0.001 # Minimum value of epsilon
    init_epsilon_max: 0.5 # Maximum value of epsilon
    init_epsilon_step: 0.01 # Step size for epsilon
    init_epsilon_default_value: 0.1 # Default value of epsilon

    percentiles_min: 50 # Minimum value of the percentile for selecting the threshold based on previous single-step regret
    percentiles_max: 100 # Maximum value of the percentile for selecting the threshold based on previous single-step regret
    percentiles_step: 1 # Step size for the percentile
    percentiles_default_value: 80 # Default value of the percentile

  evaluation:
    init_epsilon_min: 0.0001 # Minimum value of epsilon
    init_epsilon_max: 0.1001 # Maximum value of epsilon
    init_epsilon_step: 0.0005 # Step size for epsilon
    default_percentiles: 80 # Percentile of previous single-step regret used for threshold selection

    percentiles_min: 50 # Minimum value of the percentile for selecting the threshold based on previous single-step regret
    percentiles_max: 100 # Maximum value of the percentile for selecting the threshold based on previous single-step regret
    percentiles_step: 1 # Step size for the percentile
    default_init_epsilon: 0.01 # Default value of epsilon

boltzmann:
  dynamic_plot:
    temperature_min: 0.01 # Minimum value of temperature
    temperature_max: 1.01 # Maximum value of temperature
    temperature_step: 0.001 # Step size for temperature
    temperature_default_value: 0.5 # Default value of temperature

  evaluation:
    temperature_min: 0.01 # Minimum value of temperature
    temperature_max: 0.25 # Maximum value of temperature
    temperature_step: 0.001 # Step size for temperature

thompson_sampling: None # No parameters

ucb:
  #  c: 1.5  # Parameter for UCB
  dynamic_plot:
    c_min: 0.001 # Minimum value of parameter for UCB
    c_max: 1 # Maximum value of parameter for UCB
    c_step: 0.001 # Step size for parameter of UCB
    c_default_value: 0.5 # Default value of parameter for UCB

  evaluation:
    c_min: 0.001 # Minimum value of parameter for UCB
    c_max: 1.0   # Maximum value of parameter for UCB
    c_step: 0.001 # Step size for parameter of UCB

exp3:
  dynamic_plot:
    gamma_min: 0.001 # Minimum value of gamma
    gamma_max: 1.0 # Maximum value of gamma
    gamma_step: 0.001 # Step size for gamma
    gamma_default_value: 0.01 # Default value of gamma

  evaluation:
    gamma_min: 0.001 # Minimum value of gamma
    gamma_max: 1.0 # Maximum value of gamma
    gamma_step: 0.005 # Step size for gamma

exp_ix:
  dynamic_plot:
    eta_min: 0.01 # Minimum value of eta
    eta_max: 1.01 # Maximum value of eta
    eta_step: 0.01 # Step size for eta
    eta_default_value: 0.5 # Default value of eta

  evaluation:
    eta_min: 0.01 # Minimum value of eta
    eta_max: 1.01 # Maximum value of eta
    eta_step: 0.01 # Step size for eta

exp4:
  batch_size: 64  # Batch size
  seq_length: 20  # Sequence length
  input_size: 10  # Input size
  output_size: 10  # Output size
  learning_rate: 0.001  # Learning rate
  num_workers: 16  # Number of workers for DataLoader
  num_epochs: 100  # Number of epochs
  device: 'cuda'  # Device
  mix_precision: True  # Mixed precision training

  # Early stopping parameters
  patience_epochs: 6  # Stop training if no improvement for 'patience_epochs' epochs
  min_delta: 1e-3  # Consider no improvement if the change in the monitored metric is less than min_delta

  # Scheduler parameters
  mode: 'min'  # 'min' means the smaller the monitored metric, the better; 'max' means the larger the better
  factor: 0.1  # Scaling factor for the learning rate scheduler
  patience_lr: 2  # Scale the learning rate if no improvement for 'patience_lr' epochs
  min_lr: 1e-6  # Lower limit of the learning rate
  threshold: 1e-2  # Consider no improvement if the change in the monitored metric is less than threshold

  ARconfig:
    order: 5  # Order of the AR model

  LSTMconfig:
    hidden_size: 128  # Hidden layer size for the LSTM model
    num_layers: 4  # Number of layers in the LSTM model
    dropout_prob: 0.2  # Dropout rate for the LSTM model
#    weight_decay: 1e-4  # Weight decay for the LSTM model
  #    batch_first: True  # Whether the input for the LSTM model is batch_first

  GNNconfig:
    hidden_size: 128  # Hidden layer size for the GNN model
    num_layers: 4  # Number of layers in the GNN model
#    dropout: 0.2  # Dropout rate for the GNN model
#    batch_first: True  # Whether the input for the GNN model is batch_first
#    num_heads: 8  # Number of heads in the GNN model
#    concat: True  # Whether to concatenate the outputs of multiple heads in the GNN model
